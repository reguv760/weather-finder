{"version":3,"sources":["img/daytime.jpg","img/nighttime.jpg","components/Titles.js","components/Form.js","components/WeatherIcon.js","components/Weather.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Titles","react_default","a","createElement","className","React","Component","Form","props","onSubmit","getWeather","type","name","placeholder","WeatherIcon","src","concat","icon","alt","Weather","this","city","country","temperature","humidity","description","components_WeatherIcon","error","App","state","temp","undefined","componentDidMount","DotEnv","config","_callee","e","api_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","process","sent","json","_this","setState","main","sys","weather","stop","titleTextColor","currentBG","Date","getHours","DayIMG","NightIMG","style","backgroundImage","color","components_Titles","components_Form","components_Weather","tempature","ReactDOM","render","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.b26af5cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/daytime.a3f33b07.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nighttime.c1c08ff4.jpg\";","import React from 'react';\r\n\r\nclass Titles extends React.Component\r\n{\r\n\trender()\r\n\t{\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className=\"title-container__title\" >Weather Finder</h1>\r\n\t\t\t\t<p className=\"title-container__subtitle\">Find out tempearture, conditions and then some...</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Titles;","import React from 'react';\r\n\r\n// getWeather is inhereted from App.js as props into child component\r\nconst Form = props =>\t\t\r\n(\r\n\t<div className=\"weather-form\">\r\n\t\t<h1>Please enter a city and country</h1>\r\n\t\t<form onSubmit={ props.getWeather }>\r\n\t\t\t<input type=\"text\" name=\"city\" placeholder=\"City\"/>\r\n\t\t\t<input type=\"text\" name=\"country\" placeholder=\"Country\"/>\r\n\t\t\t\r\n\t\t\t<br/>\r\n\r\n\t\t\t<button>Get Weather</button>\r\n\t\t</form>\r\n\t</div>\r\n)\r\n\t\r\nexport default Form;","import React from 'react';\r\n\r\nconst WeatherIcon = props =>\r\n{\r\n\treturn(\r\n\t\t<div className=\"weatherIcon\">\r\n\t\t\t<img \r\n\t\t\t\tclassName=\"weatherIcon__icon\"\r\n\t\t\t\tsrc={`http://openweathermap.org/img/w/${props.icon}.png`} \r\n\t\t\t\talt=\"Weather Icon\" \r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default WeatherIcon;\r\n","import React from 'react';\r\nimport WeatherIcon from './WeatherIcon';\r\n\r\nclass Weather extends React.Component\r\n{\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div className=\"weather__info\">\r\n\t\t\t\t{ this.props.city && this.props.country && <p className=\"weather__key\"> Location: <br/> <span className=\"weather__value\"> { this.props.city }, { this.props.country }</span> </p> }\r\n\t\t\t\t{ this.props.temperature && <p className=\"weather__key\"> Temperature: <span className=\"weather__value\"> { this.props.temperature }</span> </p> }\r\n\t\t\t\t{ this.props.humidity && <p className=\"weather__key\"> Humidity: <span className=\"weather__value\"> { this.props.humidity }</span> </p> }\r\n\t\t\t\t{ this.props.description && <p className=\"weather__key\">Conditions: <br/> <span className=\"weather__value\"> { this.props.description }</span> </p> }\r\n\r\n\t\t\t\t{ this.props.icon && <WeatherIcon icon={this.props.icon} /> }\r\n\r\n\r\n\t\t\t\t{this.props.error && <p className=\"weather__error\"> {this.props.error}</p>}\r\n\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default Weather;","import React from 'react';\r\nimport DotEnv from 'dotenv';\r\n\r\nimport Titles from './Titles';\r\nimport Form from './Form';\r\nimport Weather from './Weather';\r\n\r\nimport DayIMG from './../img/daytime.jpg';\r\nimport NightIMG from './../img/nighttime.jpg';\r\n\r\n\r\nclass App extends React.Component\r\n{\r\n\tstate = {\r\n\t\ttemp: undefined,\r\n\t\tcity: undefined,\r\n\t\tcountry: undefined,\r\n\t\thumidity: undefined,\r\n\t\tdescription: undefined,\r\n\t\terror: undefined,\r\n\r\n\t}\r\n\r\n\tcomponentDidMount = () =>\r\n\t{\r\n\t\tDotEnv.config();\r\n\t}\r\n\r\n\tgetWeather = async (e) =>\r\n\t{\r\n\t\te.preventDefault();\r\n\r\n\t\t// elements.name.<attribute>.value \r\n\t\t// grabs input value in Form.js\r\n\r\n\t\tconst city = e.target.elements.city.value;\r\n\t\tconst country = e.target.elements.country.value;\r\n\r\n\t\t// call api with api_key\r\n\t\tconst api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${process.env.REACT_APP_API_KEY}`);\r\n\r\n\t\t// retrieve data after making an api call\r\n\t\tconst data = await api_call.json();\r\n\r\n\t\tif (city && country)\r\n\t\t{\r\n\t\t\tthis.setState({ \r\n\t\t\t\ttemp: data.main.temp,\r\n\t\t\t\tcity: data.name,\r\n\t\t\t\tcountry: data.sys.country,\r\n\t\t\t\thumidity: data.main.humidity,\r\n\t\t\t\tdescription: data.weather[0].description,\r\n\t\t\t\ticon: data.weather[0].icon,\r\n\t\t\t\terror: undefined,\r\n\t\t\t});\t\t\r\n\t\t} else\r\n\t\t{\r\n\t\t\tthis.setState({\r\n\t\t\t\ttemp: undefined,\r\n\t\t\t\tcity: undefined,\r\n\t\t\t\tcountry: undefined,\r\n\t\t\t\thumidity: undefined,\r\n\t\t\t\tdescription: undefined,\r\n\t\t\t\ticon: undefined,\r\n\t\t\t\terror: \"Please enter your location\",\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender()\r\n\t{\t\r\n\t\tconst currentHour = new Date().getHours();\r\n\t\tlet titleTextColor;\r\n\t\tlet currentBG;\r\n\r\n\t\tif (currentHour < 19)\r\n\t\t{\r\n\t\t\tcurrentBG = `url(${DayIMG})`;\r\n\t\t\ttitleTextColor = `#000`;\r\n\t\t} else {\r\n\t\t\tcurrentBG = `url(${NightIMG})`;\r\n\t\t\ttitleTextColor = `#fff`;\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-12 col-md-7 col-lg-7 title-container\" style={{ backgroundImage: currentBG, color: titleTextColor}} >\t\t\t\t\r\n\t\t\t\t\t\t<Titles/>\r\n\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"col-12 col-md-5 col-lg-5 form-container\">\r\n\t\t\t\t\t\t<Form getWeather={this.getWeather} />\r\n\t\t\t\t\t\t<Weather \r\n\t\t\t\t\t\t\ttemperature={this.state.tempature} \r\n\t\t\t\t\t\t\tcity={this.state.city}\r\n\t\t\t\t\t\t\tcountry={this.state.country}\r\n\t\t\t\t\t\t\thumidity={this.state.humidity}\r\n\t\t\t\t\t\t\tdescription={this.state.description}\r\n\t\t\t\t\t\t\ticon={this.state.icon}\r\n\t\t\t\t\t\t\terror={this.state.error}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n//this is how your import bootstrap\r\n//after npm install bootstrap --save\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './components/App.css';\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}